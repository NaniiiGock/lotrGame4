Index: src/main/java/game/CharacterFactory.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package game;\r\n\r\nimport lotr.*;\r\nimport lotr.Character;\r\n\r\npublic class CharacterFactory {\r\n    public static Character createCaracter() {\r\n        int id = Character.random.nextInt(4);\r\n        return switch (id) {\r\n            default -> new Hobbit();\r\n            case 1 -> new Elf();\r\n            case 2 -> new King();\r\n            case 3 -> new Knight();\r\n        };\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/game/CharacterFactory.java b/src/main/java/game/CharacterFactory.java
--- a/src/main/java/game/CharacterFactory.java	(revision ab74073799d349aaf51e44d169694afab1c4c464)
+++ b/src/main/java/game/CharacterFactory.java	(date 1665660780694)
@@ -1,16 +1,25 @@
 package game;
-
 import lotr.*;
 import lotr.Character;
+import java.util.Random;
+import java.util.Set;
+import lombok.SneakyThrows;
+import org.reflections.Reflections;
+import static org.reflections.scanners.Scanners.SubTypes;
 
 public class CharacterFactory {
-    public static Character createCaracter() {
-        int id = Character.random.nextInt(4);
-        return switch (id) {
-            default -> new Hobbit();
-            case 1 -> new Elf();
-            case 2 -> new King();
-            case 3 -> new Knight();
-        };
+    @SneakyThrows
+    static Character createCharacter(){
+
+        Reflections reflections = new Reflections("lotr");
+        Set<Class<?>> subTypes = reflections.get(SubTypes.of(Character.class).asClass());
+
+        subTypes.remove(Noble.class);
+        return (Character) subTypes.toArray(new Class[0])[new Random().nextInt(subTypes.size())].
+                getDeclaredConstructor().newInstance();}
+
+    public static void main(String[] args) {
+        lotr.Character character1 = CharacterFactory.createCharacter();
+        System.out.println(character1);
     }
 }
\ No newline at end of file
Index: pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\r\n         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\r\n         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\r\n    <modelVersion>4.0.0</modelVersion>\r\n\r\n    <groupId>org.example</groupId>\r\n    <artifactId>lab4</artifactId>\r\n    <version>1.0-SNAPSHOT</version>\r\n\r\n    <properties>\r\n        <maven.compiler.source>18</maven.compiler.source>\r\n        <maven.compiler.target>18</maven.compiler.target>\r\n    </properties>\r\n\r\n    <dependencies>\r\n        <dependency>\r\n            <groupId>org.junit.jupiter</groupId>\r\n            <artifactId>junit-jupiter</artifactId>\r\n            <version>5.8.1</version>\r\n            <scope>test</scope>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>org.projectlombok</groupId>\r\n            <artifactId>lombok</artifactId>\r\n            <version>1.18.24</version>\r\n            <scope>provided</scope>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>org.reflections</groupId>\r\n            <artifactId>reflections</artifactId>\r\n            <version>0.10.2</version>\r\n        </dependency>\r\n    </dependencies>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/pom.xml b/pom.xml
--- a/pom.xml	(revision ab74073799d349aaf51e44d169694afab1c4c464)
+++ b/pom.xml	(date 1665663000083)
@@ -32,4 +32,5 @@
             <version>0.10.2</version>
         </dependency>
     </dependencies>
+
 </project>
\ No newline at end of file
